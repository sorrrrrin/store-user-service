name: Build and Push Docker image

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test with Maven
        run: mvn clean package

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  push-docker-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: Extract version from pom.xml
        id: extract_version
        run: echo "VERSION=v$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/user-service:${{ env.VERSION }} .
          docker tag ghcr.io/${{ github.repository_owner }}/user-service:${{ env.VERSION }} ghcr.io/${{ github.repository_owner }}/user-service:latest

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/user-service:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/user-service:latest

      - name: Tag and push release (if not SNAPSHOT)
        if: startsWith(env.VERSION, 'v') && !contains(env.VERSION, 'SNAPSHOT')
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag ${{ env.VERSION }}
          git remote set-url origin https://x-access-token:${GHCR_TOKEN}@github.com/${{ github.repository }}.git
          git push origin ${{ env.VERSION }}
